#!/usr/bin/env bash

strindex() {
    x="${1%%$2*}"
    substr=$([[ $x = $1 ]] && echo -1 || echo ${#x})
}

# Get branch
if [[ $1 == "" ]]
then
    MASTER="origin/master"
else
    MASTER=$1
fi
BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo "Comparing $BRANCH branch against $MASTER"
echo

# Go to the root directory of the repository
DIR=`pwd`
strindex "$DIR" "ethzasl_brisk"
substr=$(expr "$substr" + 15)
DIR=`echo $DIR | cut -c -"$substr"`
cd $DIR

# Get the diff between this branch and origin/master, and run cpp_lint
# on all files
DIFF=$(git diff $MASTER --name-only \
       | grep -v "brisk_ros_demo" \
       | grep -v "agast")
ERRORS=0
for file in $DIFF ; do
    if [[ "$file" == *.h ]] || [[ "$file" == *.cc ]] || [[ "$file" == *.cpp ]]
    then
        FINISHED=0
        while [ $FINISHED -eq 0 ]
        do
            LINE="=========================================="
            LINE+=$LINE
            OUTPUT=$(./cpplint.py $file 2>&1 >/dev/null)
            if [[ "$OUTPUT" == *"errors found: 0" ]]
            then
                FINISHED=1
                echo "$LINE"
                echo "== No errors in file $file =="
                echo "$LINE"
                echo
            else
                OUTPUT=${OUTPUT//"$file:"/Line }
                OUTPUT=${OUTPUT//"Done processing Line"/"$LINE"}
                OUTPUT=${OUTPUT//"Done processing $file"/"$LINE"}
                echo "$LINE"
                echo "== $file =="
                if [[ $2 == "-c" ]]
                then
                    echo "$OUTPUT."
                    echo
                    FINISHED=1
                    ERRORS=$(expr $ERRORS + 1)
                else
                    MSG_CNT="'c' to continue"
                    MSG_RE="'r' to re-run lint on the same file"
                    echo "$OUTPUT.   Press $MSG_CNT, $MSG_RE."
                    VALID_KEY=0
                    while [ $VALID_KEY -eq 0 ]
                    do
                        read -n 1 c
                        if [[ $c = "R" ]] || [[ $c == "r" ]]
                        then
                            VALID_KEY=1
                        fi
                        if [[ $c == "C" ]] || [[ $c == "c" ]]
                        then
                            FINISHED=1
                            VALID_KEY=1
                            ERRORS=$(expr $ERRORS + 1)
                        fi
                    done
                fi
            fi
        done
    fi
done
echo "Found $ERRORS file(s) with errors in this branch."
if [[ $ERRORS -eq 0 ]]
then
    exit 0
else
    exit 1
fi
